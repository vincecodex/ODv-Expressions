main calls parse on "3**2 + 4**2
(-2 + (2**2-4*1*4)**.5)/(2*1)"
calling parse
lex read decimal integer: 3 -> 6992592 ()
found integer
lex read exponentiation operator
lex read decimal integer: 2 -> 6992688 ()
found integer
found exponentiation expression
lex skipped whitespace
lex read addition operator: +
lex skipped whitespace
lex read decimal integer: 4 -> 6992848 ()
found integer
lex read exponentiation operator
lex read decimal integer: 2 -> 6992944 ()
found integer
found exponentiation expression
lex found new lines
found additive expression
expression parsed
lex read open parenthesis
lex read subtraction operator: -
lex read decimal integer: 2 -> 6993232 ()
found integer
lex skipped whitespace
lex read addition operator: +
found negative expression
lex skipped whitespace
lex read open parenthesis
lex read decimal integer: 2 -> 6993424 ()
found integer
lex read exponentiation operator
lex read decimal integer: 2 -> 6993520 ()
found integer
found exponentiation expression
lex read subtraction operator: -
lex read decimal integer: 4 -> 6993680 ()
found integer
lex read multiplication operator: *
lex read decimal integer: 1 -> 6993776 ()
found integer
lex read multiplication operator: *
found multiplicative expression
lex read decimal integer: 4 -> 6993936 ()
found integer
lex read close parenthesis
found multiplicative expression
found subtractive expression
found parenthesized expression
lex read exponentiation operator
lex read fraction: .5 -> 0.000000 ()
found float
found exponentiation expression
lex read close parenthesis
found additive expression
found parenthesized expression
lex read division operator: /
lex read open parenthesis
lex read decimal integer: 2 -> 6994480 ()
found integer
lex read multiplication operator: *
lex read decimal integer: 1 -> 6994576 ()
found integer
lex read close parenthesis
found multiplicative expression
found parenthesized expression
found divisive expression
expression parsed
		negation:
			2
	addition:
					2
				exponentiation:
					2
			subtraction:
						4
					multiplication:
						1
				multiplication:
					4
		exponentiation:
			0
division:
		2
	multiplication:
		1
